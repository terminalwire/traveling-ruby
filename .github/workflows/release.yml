name: Latest Build Artifacts Release Workflow

on:
  workflow_dispatch: # Allows manual triggering

env:
  REPO: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RELEASE_TAG: latest-build-artifacts
  RELEASE_NAME: "Latest Build Artifacts"

jobs:
  fetch-latest-artifacts:
    name: Fetch Latest Build Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Latest Successful Workflow Run
        id: get-latest-run
        run: |
          latest_run_id=$(gh run list --json databaseId --limit 1 --jq '.[0].databaseId')
          echo "LATEST_RUN_ID=$latest_run_id" >> $GITHUB_ENV

      - name: Download Artifacts
        run: |
          gh run download $LATEST_RUN_ID --dir artifacts
          echo "Downloaded artifacts to ./artifacts/"

      - name: List Downloaded Artifacts
        run: ls -R artifacts

  create-release:
    name: Create GitHub Release
    needs: fetch-latest-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create or Update Release
        run: |
          # Create or update the release
          if gh release view "${RELEASE_TAG}" --repo "${REPO}"; then
            echo "Updating release ${RELEASE_TAG}"
            gh release delete "${RELEASE_TAG}" --repo "${REPO}" --yes
          fi
          gh release create "${RELEASE_TAG}" --repo "${REPO}" --title "${RELEASE_NAME}" --notes "Artifacts from the latest successful build." --draft

      - name: Upload Artifacts to Release
        run: |
          for file in $(find artifacts -type f); do
            gh release upload "${RELEASE_TAG}" "$file" --repo "${REPO}" --clobber
          done

      - name: Confirm Uploaded Artifacts
        run: |
          gh release view "${RELEASE_TAG}" --repo "${REPO}" --json assets -q '.assets[].name'
